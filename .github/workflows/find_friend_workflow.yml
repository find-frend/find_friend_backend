name: find friend workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 flake8-broken-line
        cd backend/
        pip install -r requirements.txt 

    - name: Lint with flake8
      run: python -m flake8

  build_and_push_backend_to_docker_hub:
    if: github.ref == 'refs/heads/main'
    name: Push backend image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v3 
        with:
          context: backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/find_friend_backend:latest
  
  deploy:
    name: Deploying on remote server
    runs-on: ubuntu-latest
    needs:
    - tests
    - build_and_push_backend_to_docker_hub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          sudo rm -f .env
          touch .env
          sudo docker compose down
          sudo docker rmi esperansa/find_friend_backend:latest
          sudo echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          sudo echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          sudo echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          sudo echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          sudo echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          sudo echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          sudo echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          sudo docker pull esperansa/foodgram-frontend:latest
          sudo docker pull esperansa/foodgram-backend:latest
          sudo docker compose up -d --build
